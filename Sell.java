import java.sql.*;
import javax.swing.JOptionPane;

public class Sell extends javax.swing.JFrame {   

    private javax.swing.JButton backbtn;
    private javax.swing.JButton sellbtn;
    private javax.swing.JTextField cName;
    private javax.swing.JTextField cQty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private String uname;
    private Integer bal;

    public Sell(String name, Integer balance) {
        uname = name;
        bal = balance;
        initComponents();
        setVisible(true);
        displayBought();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        cName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cQty = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sellbtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 0, 24)); // NOI18N
        jLabel1.setText("Sell Cryptos");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Available Cryptos:");

        jLabel3.setText("Enter the cyprto name you would like to sell:");

        jLabel4.setText("Quantity:");

        sellbtn.setText("Sell");
        sellbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellbtnActionPerformed(evt);
            }
        });

        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(cName, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cQty, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel1)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backbtn)
                .addGap(43, 43, 43)
                .addComponent(sellbtn)
                .addGap(175, 175, 175))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sellbtn)
                    .addComponent(backbtn))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>  
    
    private void displayBought(){
        try{
            Class.forName("org.sqlite.JDBC");
            java.sql.Connection con = DriverManager.getConnection("jdbc:sqlite:C:/Users/dassa/CRYPTO.db");
            
            String sql = "SELECT cname, cqty, total FROM bought WHERE uname=?";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, uname);
            ResultSet rs=pstmt.executeQuery();  //obj contains the count table
            String resultText = "Currency Name\t   Quanity\tTotal Price\n";
            while(rs.next()){
                String cName = rs.getString("cname");
                Integer cQty = rs.getInt("cqty");
                Integer total = rs.getInt("total");
                resultText += cName + "\t   " + cQty + "\t" + total + "\n";
            }
            jTextArea1.setText(resultText);
        }catch(Exception e){
            System.err.println( e.getClass().getName() + ": " + e.getMessage() );
            System.exit(0);
        }
    }

    private void sellbtnActionPerformed(java.awt.event.ActionEvent evt) {
        try{
            Class.forName("org.sqlite.JDBC");
            java.sql.Connection con = DriverManager.getConnection("jdbc:sqlite:C:/Users/dassa/CRYPTO.db");

            String name = cName.getText();
            Integer qty = Integer.valueOf(cQty.getText());
            
            String sql = "SELECT cname, cqty, cprice, total FROM bought WHERE uname=?";
            PreparedStatement pstmt = con.prepareStatement(sql);
            pstmt.setString(1, uname);
            ResultSet rs=pstmt.executeQuery();  //obj contains the count table
            while(rs.next()){
                String cName = rs.getString("cname"); 
                Integer cQty = rs.getInt("cqty");
                Integer cPrice = rs.getInt("cprice");
                if(name.equals(cName)){
                    if(qty > cQty){
                        JOptionPane.showMessageDialog(null, "Quantity Exceeded", "qty exceed", 1);
                    }
                    else if(qty == cQty){
                        bal = bal + (qty * cPrice);
                        sql = "DELETE FROM bought WHERE cname = ? and uname = ?";
                        pstmt = con.prepareStatement(sql);
                        pstmt.setString(1, cName);
                        pstmt.setString(2, uname);
                        pstmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Sold Successfully", "Selling Success", 1);
                    }
                    else if(qty < cQty){
                        bal = bal + (qty * cPrice);
                        sql = "UPDATE bought SET cqty=?, total=? WHERE cname = ? and uname = ?";
                        pstmt = con.prepareStatement(sql);
                        pstmt.setInt(1, cQty - qty);
                        pstmt.setInt(2, cPrice * (cQty - qty));
                        pstmt.setString(3, name);
                        pstmt.setString(4, uname);
                        pstmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Sold Successfully", "Selling Success", 1);
                    }
                    break;
                }
            }
            this.dispose();
            con.close();
            new Home(uname, bal);

        }catch(Exception e){
            System.err.println( e.getClass().getName() + ": " + e.getMessage() );
            System.exit(0);
        }
    }
    
    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) { 
        this.dispose();
        new Home(uname, bal);
    }
}
